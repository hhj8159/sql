-- 인덱스 : SQL 명령문 처리 속도 향상을 위해 칼럼에 대해 생성하는 객체
-- B-트리
-- CREATE [UNIQUE] INDEX INDEX
-- ON TABLE (COLUMN1[ASC|DESC][,COLUMN2[ASC|DESC]],...);
-- 오라클 힌트 - SQL튜닝의 핵심부분, 일종의 지시구문
-- CTRL SHIFT / 부분 주석, 쿼리 서두에 힌트 명시해서 사용 EX)/*+ INDEX(DEPARTMENT IDX_DEPT_NAME) */


SELECT * FROM PROFESSOR p ;

ALTER TABLE DEPARTMENT MODIFY (DEPNO CONSTRAINT DEPARTMENT_PK PRIMARY KEY);

SELECT STUDNO, NAME, ROWID, ROWNUM FROM STUDENT;

-- DEPARTMENT 테이블 DNAME고유 인덱스 생성
CREATE INDEX IDX_DEPT_NAME ON DEPARTMENT(DNAME);

DROP INDEX IDX_DEPT_NAME;

--SELECT /*+ INDEX(DEPARTMENT IDX_DEPT_NAME) */ * FROM DEPARTMENT;
SELECT /*+ INDEX_DESC(DEPARTMENT DEPARTMENT_PK) */ * FROM DEPARTMENT;


-- 학생테이블 BIRTHDATE의 비고유 인덱스 생성
CREATE INDEX IDX_STU_BIRTHDATE ON STUDENT(BIRTHDATE);

-- 결합인덱스
-- STUDENT테이블의 DEPTNO,GRADE 결합인덱스 생성
--SELECT DISTINCT GRADE, DEPTNO FROM STUDENT s ;
CREATE INDEX IDX_STU_DEPTNO_GRADE ON STUDENT(DEPTNO, GRADE DESC);

-- 함수 기반 인덱스 함수 호출 결과를 인덱스로 건다

-- 인덱스 재구성 REBUILD

-- 뷰VIEW 테이블처럼 사용됨. 가상 테이블
-- 테이블은 디스크에 공간 할당 후 데이터 저장, 데이터딕셔너리 테이블에 뷰에 대한 정의만 저장, 디스크 저장공간 할당X


SELECT * FROM STUDENT;

-- GRANT CREATE VIEW TO SAMPLE; 시스템에서 뷰 생성 권한
-- CREATE OT REPLACE
CREATE OR REPLACE VIEW VIEW_STUD AS
SELECT STUDNO, NAME, USERID, DEPTNO FROM STUDENT;

SELECT DEPTNO, COUNT(*)
FROM VIEW_STUD
WHERE DEPTNO <> 201
GROUP BY DEPTNO;

INSERT INTO VIEW_STUD VALUES (12345, '홍길동', NULL);

SELECT * FROM VIEW_STUD;
SELECT * FROM (SELECT STUDNO, NAME, DEPTNO FROM STUDENT);

SELECT * FROM STUDENT;

-- FORCE 강제 생성
CREATE FORCE VIEW VIEW_STUD2 AS
SELECT * FROM STUDEN;

-- 단순 뷰
-- 복합 뷰 - 두개 이상의 테이블로 구성

-- 학번, 이름, 학과번호, 학과이름으로 VIEW_STUD_DEPT라는 뷰를 생성

CREATE VIEW VIEW_STUD_DEPT2 AS
SELECT STUDNO, NAME, DEPTNO, DNAME
FROM STUDENT s NATURAL JOIN DEPARTMENT d;

SELECT * FROM VIEW_STUD_DEPT;

--CREATE VIEW VIEW_STUD_DEPT AS;
--
--SELECT STUDNO, NAME, DEPTNO FROM STUDENT;
--SELECT DEPTNO, DNAME FROM DEPARTMENT;
--
--CREATE VIEW VIEW_STUD_DEPT AS
--SELECT STUDNO, NAME, D.DEPTNO 
--FROM STUDENT S , DEPARTMENT d
--WHERE S.DEPTNO = D.DEPTNO;

-- 11111, 고길동, 101, 컴퓨터공학과
INSERT INTO VIEW_STUD_DEPT VALUES(11111, 고길동, 101, '컴퓨터공학과');


-- 학과별 인원수를 조회하여 VIEW_STUD_DEPT3라는 이름의 VIEW 생성
CREATE VIEW VIEW_STUD_DEPT3(DNO, CNT) AS 
SELECT DEPTNO, COUNT(*)
FROM STUDENT
GROUP BY DEPTNO 
ORDER BY 1;

SELECT * FROM VIEW_STUD_DEPT3;

-- 인라인 뷰 - FROM절 서브쿼리

SELECT * FROM BOARD;

--ALTER SEQUENCE SEQ_BOARD START WITH 30;
DROP SEQUENCE SEQ_BOARD;
CREATE SEQUENCE SEQ_BOARD;
SELECT * FROM BOARD;

INSERT INTO BOARD (NO, TITLE, CONTENT, WERITER)
	VALUES (SEQ_BOARD.NEXTVAL, '제목' || SEQ_BOARD.CURRVAL, '내용', '작성자');

INSERT INTO BOARD (NO, TITLE, CONTENT, WERITER)
	SELECT SEQ_BOARD.NEXTVAL, TITLE, CONTENT, WERITER FROM BOARD;

-- 한 페이지에 몇 개씩 보나 EX)10

-- 얘는 복잡하다
SELECT * FROM (
	SELECT ROWNUM RN, A.*
	FROM (
		SELECT B.* FROM BOARD B 
		--WHERE ROWNUM <= 10
		ORDER BY 1 DESC 
	) A
)
WHERE ROWNUM <= 10 AND RN > (4 - 1) * 10;

SELECT * FROM (
	SELECT /*+ INDEX_DESC(B SYS_C007009)*/ B.*, ROWNUM RN
	FROM BOARD B
	WHERE NO > 0
);


-- 가능하면 이쪽으로 쓰는 거 추천
WITH A AS (
	SELECT /*+ INDEX_DESC(B SYS_C007009)*/ B.*, ROWNUM RN
	FROM BOARD B
	WHERE NO > 0
)
SELECT * 
FROM A
WHERE ROWNUM <= 10
AND RN > 10;

-- 뷰 삭제 DROP VIEW VIEW; 


-- 데이터베이스 보안
-- FILE SYSTEM
-- FILE의 권한 , CHMOD 777, 755 등
-- 		  READ, WRITE, EXECUTE   0~7
-- OWNER 	1	  0		  1
-- GUEST		  		  
-- GROUP 	1	  0		  0

-- AUDIT

-- 권한
-- 시스템 권한, 객체 권한

-- 시스템 권한 부여 - GRANT, TO
-- GRANT {system privs|role]
--	 [, {system priv|role} ]…
-- TO {user|role|PUBLIC}
--	 [, {user|role|PUBLIC}]…
-- [WITH ADMIN OPTION]

-- 시스템 권한 철회 - REVOKE, FROM


-- 객체 권한 부여 - GRANT (SAMPLE이 HG의 EMPLYEES의 셀렉트 할 수 있는 권한 부여)
SELECT * FROM HR.EMPLOYEES;

-- 객체 권한 철회 -REVOKE (SAMPLE이 HG의 EMPLYEES의 섹렉트 할 수 있는 권한 철회)
SELECT * FROM HR.EMPLOYEES;

-- 롤 - CONNECT, RESOURCE, DBA

-- 동의어 - 데이터베이스 전체에서 사용
-- ALIAS(별명)은 해당 SQL명령문에서만 사용

SELECT S.* FROM STUDENT s ;
SELECT D.* FROM STUDENT s ;

SELECT SYSDATE FROM DUAL; -- EX) DUAL이 동의어다

SELECT * FROM SYS.DUAL;


-- 전용 동의어 생성 - 객체에 접근권한 받은 유저가 정의한 동의어 해당유저만 사용
SELECT * FROM HR.EMPLOYEES;
SELECT * FROM EMP;

CREATE SYNONYM EMP FOR HR.EMPLOYEES;


-- 공용 동의어 -권한주는 유저가 만든 동의어
CREATE PUBLIC SYNONYM STU FOR SAMPLE.STUDENT;

SELECT * FROM STU;

-- 데이터 사전 - 읽기만 가능 뷰처럼 사용된다
-- 사전
-- 접두어 : USER_ ALL_ DBA_

SELECT * FROM ALL_TABLES WHERE OWNER = 'SAMPLE';

SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'BOARD';

SELECT * FROM USER_CONSTRAINTS;

SELECT * FROM USER_INDEXES;


-- 자바 연동 테스트
SELECT * FROM STUDENT s ;





